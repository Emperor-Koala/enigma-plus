const allowedCharacters: string = "1234567890qwertyuiopasdfghjklzxcvbnm\t ";

const wirings = [
    [[0, 5], [1, 34], [2, 4], [3, 0], [4, 3], [5, 6], [6, 37], [7, 8], [8, 22], [9, 29], [10, 2], [11, 26], [12, 25], [13, 31], [14, 27], [15, 32], [16, 7], [17, 23], [18, 35], [19, 11], [20, 18], [21, 30], [22, 28], [23, 36], [24, 16], [25, 15], [26, 19], [27, 20], [28, 24], [29, 9], [30, 1], [31, 21], [32, 17], [33, 13], [34, 10], [35, 33], [36, 14], [37, 12]],
    [[0, 12], [1, 25], [2, 32], [3, 10], [4, 26], [5, 20], [6, 9], [7, 35], [8, 37], [9, 6], [10, 19], [11, 34], [12, 2], [13, 4], [14, 7], [15, 3], [16, 22], [17, 33], [18, 29], [19, 13], [20, 30], [21, 14], [22, 8], [23, 24], [24, 28], [25, 23], [26, 18], [27, 15], [28, 27], [29, 0], [30, 21], [31, 1], [32, 36], [33, 31], [34, 5], [35, 16], [36, 11], [37, 17]],
    [[0, 27], [1, 34], [2, 26], [3, 31], [4, 11], [5, 28], [6, 29], [7, 8], [8, 5], [9, 1], [10, 13], [11, 35], [12, 37], [13, 0], [14, 7], [15, 33], [16, 19], [17, 30], [18, 3], [19, 23], [20, 10], [21, 4], [22, 21], [23, 20], [24, 18], [25, 14], [26, 32], [27, 9], [28, 17], [29, 22], [30, 6], [31, 16], [32, 24], [33, 12], [34, 25], [35, 2], [36, 15], [37, 36]],
    [[0, 32], [1, 33], [2, 22], [3, 35], [4, 7], [5, 19], [6, 30], [7, 2], [8, 29], [9, 10], [10, 9], [11, 36], [12, 37], [13, 27], [14, 11], [15, 13], [16, 1], [17, 4], [18, 5], [19, 17], [20, 34], [21, 31], [22, 0], [23, 14], [24, 6], [25, 8], [26, 21], [27, 3], [28, 24], [29, 28], [30, 26], [31, 18], [32, 25], [33, 20], [34, 12], [35, 16], [36, 15], [37, 23]],
    [[0, 2], [1, 30], [2, 7], [3, 22], [4, 6], [5, 36], [6, 1], [7, 32], [8, 27], [9, 3], [10, 15], [11, 35], [12, 34], [13, 14], [14, 20], [15, 17], [16, 31], [17, 11], [18, 10], [19, 24], [20, 28], [21, 25], [22, 4], [23, 13], [24, 8], [25, 33], [26, 21], [27, 37], [28, 0], [29, 12], [30, 23], [31, 19], [32, 16], [33, 18], [34, 5], [35, 9], [36, 26], [37, 29]]
];

const endWiring = [[0, 7], [1, 25], [2, 33], [3, 10], [4, 23], [5, 6], [6, 5], [7, 0], [8, 17], [9, 36], [10, 3], [11, 28], [12, 32], [13, 24], [14, 35], [15, 21], [16, 34], [17, 8], [18, 31], [19, 30], [20, 29], [21, 15], [22, 27], [23, 4], [24, 13], [25, 1], [26, 37], [27, 22], [28, 11], [29, 20], [30, 19], [31, 18], [32, 12], [33, 2], [34, 16], [35, 14], [36, 9], [37, 26]];

/**
 * Returns a random integer between 0 (inclusive) and max (exclusive).
 */
const getRandomInt = (max: number): number => {
    max = Math.floor(max);
    return Math.floor(Math.random() * max);
}

export {
    allowedCharacters,
    wirings,
    endWiring,
    getRandomInt,
}